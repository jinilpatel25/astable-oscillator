0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Wed Mar 04 12:11:42 2020
0000              5   ;--------------------------------------------------------
                  5   $name freqonlcd
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _reverse_PARM_2
0000             27            public _main
0000             28            public _ftoa
0000             29            public _power
0000             30            public _intToStr
0000             31            public _reverse
0000             32            public _getsn
0000             33            public _LCDprint
0000             34            public _LCD_4BIT
0000             35            public _WriteCommand
0000             36            public _WriteData
0000             37            public _LCD_byte
0000             38            public _LCD_pulse
0000             39            public _TIMER0_Init
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _LCDprint_PARM_3
0000             44            public _ftoa_PARM_3
0000             45            public _ftoa_PARM_2
0000             46            public _power_PARM_2
0000             47            public _intToStr_PARM_3
0000             48            public _intToStr_PARM_2
0000             49            public _getsn_PARM_2
0000             50            public _LCDprint_PARM_2
0000             51            public _overflow_count
0000             52   ;--------------------------------------------------------
0000             53   ; Special Function Registers
0000             54   ;--------------------------------------------------------
0000             55   _ACC            DATA 0xe0
0000             56   _ADC0ASAH       DATA 0xb6
0000             57   _ADC0ASAL       DATA 0xb5
0000             58   _ADC0ASCF       DATA 0xa1
0000             59   _ADC0ASCT       DATA 0xc7
0000             60   _ADC0CF0        DATA 0xbc
0000             61   _ADC0CF1        DATA 0xb9
0000             62   _ADC0CF2        DATA 0xdf
0000             63   _ADC0CN0        DATA 0xe8
0000             64   _ADC0CN1        DATA 0xb2
0000             65   _ADC0CN2        DATA 0xb3
0000             66   _ADC0GTH        DATA 0xc4
0000             67   _ADC0GTL        DATA 0xc3
0000             68   _ADC0H          DATA 0xbe
0000             69   _ADC0L          DATA 0xbd
0000             70   _ADC0LTH        DATA 0xc6
0000             71   _ADC0LTL        DATA 0xc5
0000             72   _ADC0MX         DATA 0xbb
0000             73   _B              DATA 0xf0
0000             74   _CKCON0         DATA 0x8e
0000             75   _CKCON1         DATA 0xa6
0000             76   _CLEN0          DATA 0xc6
0000             77   _CLIE0          DATA 0xc7
0000             78   _CLIF0          DATA 0xe8
0000             79   _CLKSEL         DATA 0xa9
0000             80   _CLOUT0         DATA 0xd1
0000             81   _CLU0CF         DATA 0xb1
0000             82   _CLU0FN         DATA 0xaf
0000             83   _CLU0MX         DATA 0x84
0000             84   _CLU1CF         DATA 0xb3
0000             85   _CLU1FN         DATA 0xb2
0000             86   _CLU1MX         DATA 0x85
0000             87   _CLU2CF         DATA 0xb6
0000             88   _CLU2FN         DATA 0xb5
0000             89   _CLU2MX         DATA 0x91
0000             90   _CLU3CF         DATA 0xbf
0000             91   _CLU3FN         DATA 0xbe
0000             92   _CLU3MX         DATA 0xae
0000             93   _CMP0CN0        DATA 0x9b
0000             94   _CMP0CN1        DATA 0x99
0000             95   _CMP0MD         DATA 0x9d
0000             96   _CMP0MX         DATA 0x9f
0000             97   _CMP1CN0        DATA 0xbf
0000             98   _CMP1CN1        DATA 0xac
0000             99   _CMP1MD         DATA 0xab
0000            100   _CMP1MX         DATA 0xaa
0000            101   _CRC0CN0        DATA 0xce
0000            102   _CRC0CN1        DATA 0x86
0000            103   _CRC0CNT        DATA 0xd3
0000            104   _CRC0DAT        DATA 0xcb
0000            105   _CRC0FLIP       DATA 0xcf
0000            106   _CRC0IN         DATA 0xca
0000            107   _CRC0ST         DATA 0xd2
0000            108   _DAC0CF0        DATA 0x91
0000            109   _DAC0CF1        DATA 0x92
0000            110   _DAC0H          DATA 0x85
0000            111   _DAC0L          DATA 0x84
0000            112   _DAC1CF0        DATA 0x93
0000            113   _DAC1CF1        DATA 0x94
0000            114   _DAC1H          DATA 0x8a
0000            115   _DAC1L          DATA 0x89
0000            116   _DAC2CF0        DATA 0x95
0000            117   _DAC2CF1        DATA 0x96
0000            118   _DAC2H          DATA 0x8c
0000            119   _DAC2L          DATA 0x8b
0000            120   _DAC3CF0        DATA 0x9a
0000            121   _DAC3CF1        DATA 0x9c
0000            122   _DAC3H          DATA 0x8e
0000            123   _DAC3L          DATA 0x8d
0000            124   _DACGCF0        DATA 0x88
0000            125   _DACGCF1        DATA 0x98
0000            126   _DACGCF2        DATA 0xa2
0000            127   _DERIVID        DATA 0xad
0000            128   _DEVICEID       DATA 0xb5
0000            129   _DPH            DATA 0x83
0000            130   _DPL            DATA 0x82
0000            131   _EIE1           DATA 0xe6
0000            132   _EIE2           DATA 0xf3
0000            133   _EIP1           DATA 0xbb
0000            134   _EIP1H          DATA 0xee
0000            135   _EIP2           DATA 0xed
0000            136   _EIP2H          DATA 0xf6
0000            137   _EMI0CN         DATA 0xe7
0000            138   _FLKEY          DATA 0xb7
0000            139   _HFO0CAL        DATA 0xc7
0000            140   _HFO1CAL        DATA 0xd6
0000            141   _HFOCN          DATA 0xef
0000            142   _I2C0ADM        DATA 0xff
0000            143   _I2C0CN0        DATA 0xba
0000            144   _I2C0DIN        DATA 0xbc
0000            145   _I2C0DOUT       DATA 0xbb
0000            146   _I2C0FCN0       DATA 0xad
0000            147   _I2C0FCN1       DATA 0xab
0000            148   _I2C0FCT        DATA 0xf5
0000            149   _I2C0SLAD       DATA 0xbd
0000            150   _I2C0STAT       DATA 0xb9
0000            151   _IE             DATA 0xa8
0000            152   _IP             DATA 0xb8
0000            153   _IPH            DATA 0xf2
0000            154   _IT01CF         DATA 0xe4
0000            155   _LFO0CN         DATA 0xb1
0000            156   _P0             DATA 0x80
0000            157   _P0MASK         DATA 0xfe
0000            158   _P0MAT          DATA 0xfd
0000            159   _P0MDIN         DATA 0xf1
0000            160   _P0MDOUT        DATA 0xa4
0000            161   _P0SKIP         DATA 0xd4
0000            162   _P1             DATA 0x90
0000            163   _P1MASK         DATA 0xee
0000            164   _P1MAT          DATA 0xed
0000            165   _P1MDIN         DATA 0xf2
0000            166   _P1MDOUT        DATA 0xa5
0000            167   _P1SKIP         DATA 0xd5
0000            168   _P2             DATA 0xa0
0000            169   _P2MASK         DATA 0xfc
0000            170   _P2MAT          DATA 0xfb
0000            171   _P2MDIN         DATA 0xf3
0000            172   _P2MDOUT        DATA 0xa6
0000            173   _P2SKIP         DATA 0xcc
0000            174   _P3             DATA 0xb0
0000            175   _P3MDIN         DATA 0xf4
0000            176   _P3MDOUT        DATA 0x9c
0000            177   _PCA0CENT       DATA 0x9e
0000            178   _PCA0CLR        DATA 0x9c
0000            179   _PCA0CN0        DATA 0xd8
0000            180   _PCA0CPH0       DATA 0xfc
0000            181   _PCA0CPH1       DATA 0xea
0000            182   _PCA0CPH2       DATA 0xec
0000            183   _PCA0CPH3       DATA 0xf5
0000            184   _PCA0CPH4       DATA 0x85
0000            185   _PCA0CPH5       DATA 0xde
0000            186   _PCA0CPL0       DATA 0xfb
0000            187   _PCA0CPL1       DATA 0xe9
0000            188   _PCA0CPL2       DATA 0xeb
0000            189   _PCA0CPL3       DATA 0xf4
0000            190   _PCA0CPL4       DATA 0x84
0000            191   _PCA0CPL5       DATA 0xdd
0000            192   _PCA0CPM0       DATA 0xda
0000            193   _PCA0CPM1       DATA 0xdb
0000            194   _PCA0CPM2       DATA 0xdc
0000            195   _PCA0CPM3       DATA 0xae
0000            196   _PCA0CPM4       DATA 0xaf
0000            197   _PCA0CPM5       DATA 0xcc
0000            198   _PCA0H          DATA 0xfa
0000            199   _PCA0L          DATA 0xf9
0000            200   _PCA0MD         DATA 0xd9
0000            201   _PCA0POL        DATA 0x96
0000            202   _PCA0PWM        DATA 0xf7
0000            203   _PCON0          DATA 0x87
0000            204   _PCON1          DATA 0xcd
0000            205   _PFE0CN         DATA 0xc1
0000            206   _PRTDRV         DATA 0xf6
0000            207   _PSCTL          DATA 0x8f
0000            208   _PSTAT0         DATA 0xaa
0000            209   _PSW            DATA 0xd0
0000            210   _REF0CN         DATA 0xd1
0000            211   _REG0CN         DATA 0xc9
0000            212   _REVID          DATA 0xb6
0000            213   _RSTSRC         DATA 0xef
0000            214   _SBCON1         DATA 0x94
0000            215   _SBRLH1         DATA 0x96
0000            216   _SBRLL1         DATA 0x95
0000            217   _SBUF           DATA 0x99
0000            218   _SBUF0          DATA 0x99
0000            219   _SBUF1          DATA 0x92
0000            220   _SCON           DATA 0x98
0000            221   _SCON0          DATA 0x98
0000            222   _SCON1          DATA 0xc8
0000            223   _SFRPAGE        DATA 0xa7
0000            224   _SFRPGCN        DATA 0xbc
0000            225   _SFRSTACK       DATA 0xd7
0000            226   _SMB0ADM        DATA 0xd6
0000            227   _SMB0ADR        DATA 0xd7
0000            228   _SMB0CF         DATA 0xc1
0000            229   _SMB0CN0        DATA 0xc0
0000            230   _SMB0DAT        DATA 0xc2
0000            231   _SMB0FCN0       DATA 0xc3
0000            232   _SMB0FCN1       DATA 0xc4
0000            233   _SMB0FCT        DATA 0xef
0000            234   _SMB0RXLN       DATA 0xc5
0000            235   _SMB0TC         DATA 0xac
0000            236   _SMOD1          DATA 0x93
0000            237   _SP             DATA 0x81
0000            238   _SPI0CFG        DATA 0xa1
0000            239   _SPI0CKR        DATA 0xa2
0000            240   _SPI0CN0        DATA 0xf8
0000            241   _SPI0DAT        DATA 0xa3
0000            242   _SPI0FCN0       DATA 0x9a
0000            243   _SPI0FCN1       DATA 0x9b
0000            244   _SPI0FCT        DATA 0xf7
0000            245   _SPI0PCF        DATA 0xdf
0000            246   _TCON           DATA 0x88
0000            247   _TH0            DATA 0x8c
0000            248   _TH1            DATA 0x8d
0000            249   _TL0            DATA 0x8a
0000            250   _TL1            DATA 0x8b
0000            251   _TMOD           DATA 0x89
0000            252   _TMR2CN0        DATA 0xc8
0000            253   _TMR2CN1        DATA 0xfd
0000            254   _TMR2H          DATA 0xcf
0000            255   _TMR2L          DATA 0xce
0000            256   _TMR2RLH        DATA 0xcb
0000            257   _TMR2RLL        DATA 0xca
0000            258   _TMR3CN0        DATA 0x91
0000            259   _TMR3CN1        DATA 0xfe
0000            260   _TMR3H          DATA 0x95
0000            261   _TMR3L          DATA 0x94
0000            262   _TMR3RLH        DATA 0x93
0000            263   _TMR3RLL        DATA 0x92
0000            264   _TMR4CN0        DATA 0x98
0000            265   _TMR4CN1        DATA 0xff
0000            266   _TMR4H          DATA 0xa5
0000            267   _TMR4L          DATA 0xa4
0000            268   _TMR4RLH        DATA 0xa3
0000            269   _TMR4RLL        DATA 0xa2
0000            270   _TMR5CN0        DATA 0xc0
0000            271   _TMR5CN1        DATA 0xf1
0000            272   _TMR5H          DATA 0xd5
0000            273   _TMR5L          DATA 0xd4
0000            274   _TMR5RLH        DATA 0xd3
0000            275   _TMR5RLL        DATA 0xd2
0000            276   _UART0PCF       DATA 0xd9
0000            277   _UART1FCN0      DATA 0x9d
0000            278   _UART1FCN1      DATA 0xd8
0000            279   _UART1FCT       DATA 0xfa
0000            280   _UART1LIN       DATA 0x9e
0000            281   _UART1PCF       DATA 0xda
0000            282   _VDM0CN         DATA 0xff
0000            283   _WDTCN          DATA 0x97
0000            284   _XBR0           DATA 0xe1
0000            285   _XBR1           DATA 0xe2
0000            286   _XBR2           DATA 0xe3
0000            287   _XOSC0CN        DATA 0x86
0000            288   _DPTR           DATA 0x8382
0000            289   _TMR2RL         DATA 0xcbca
0000            290   _TMR3RL         DATA 0x9392
0000            291   _TMR4RL         DATA 0xa3a2
0000            292   _TMR5RL         DATA 0xd3d2
0000            293   _TMR0           DATA 0x8c8a
0000            294   _TMR1           DATA 0x8d8b
0000            295   _TMR2           DATA 0xcfce
0000            296   _TMR3           DATA 0x9594
0000            297   _TMR4           DATA 0xa5a4
0000            298   _TMR5           DATA 0xd5d4
0000            299   _SBRL1          DATA 0x9695
0000            300   _PCA0           DATA 0xfaf9
0000            301   _PCA0CP0        DATA 0xfcfb
0000            302   _PCA0CP1        DATA 0xeae9
0000            303   _PCA0CP2        DATA 0xeceb
0000            304   _PCA0CP3        DATA 0xf5f4
0000            305   _PCA0CP4        DATA 0x8584
0000            306   _PCA0CP5        DATA 0xdedd
0000            307   _ADC0ASA        DATA 0xb6b5
0000            308   _ADC0GT         DATA 0xc4c3
0000            309   _ADC0           DATA 0xbebd
0000            310   _ADC0LT         DATA 0xc6c5
0000            311   _DAC0           DATA 0x8584
0000            312   _DAC1           DATA 0x8a89
0000            313   _DAC2           DATA 0x8c8b
0000            314   _DAC3           DATA 0x8e8d
0000            315   ;--------------------------------------------------------
0000            316   ; special function bits
0000            317   ;--------------------------------------------------------
0000            318   _ACC_0          BIT 0xe0
0000            319   _ACC_1          BIT 0xe1
0000            320   _ACC_2          BIT 0xe2
0000            321   _ACC_3          BIT 0xe3
0000            322   _ACC_4          BIT 0xe4
0000            323   _ACC_5          BIT 0xe5
0000            324   _ACC_6          BIT 0xe6
0000            325   _ACC_7          BIT 0xe7
0000            326   _TEMPE          BIT 0xe8
0000            327   _ADGN0          BIT 0xe9
0000            328   _ADGN1          BIT 0xea
0000            329   _ADWINT         BIT 0xeb
0000            330   _ADBUSY         BIT 0xec
0000            331   _ADINT          BIT 0xed
0000            332   _IPOEN          BIT 0xee
0000            333   _ADEN           BIT 0xef
0000            334   _B_0            BIT 0xf0
0000            335   _B_1            BIT 0xf1
0000            336   _B_2            BIT 0xf2
0000            337   _B_3            BIT 0xf3
0000            338   _B_4            BIT 0xf4
0000            339   _B_5            BIT 0xf5
0000            340   _B_6            BIT 0xf6
0000            341   _B_7            BIT 0xf7
0000            342   _C0FIF          BIT 0xe8
0000            343   _C0RIF          BIT 0xe9
0000            344   _C1FIF          BIT 0xea
0000            345   _C1RIF          BIT 0xeb
0000            346   _C2FIF          BIT 0xec
0000            347   _C2RIF          BIT 0xed
0000            348   _C3FIF          BIT 0xee
0000            349   _C3RIF          BIT 0xef
0000            350   _D1SRC0         BIT 0x88
0000            351   _D1SRC1         BIT 0x89
0000            352   _D1AMEN         BIT 0x8a
0000            353   _D01REFSL       BIT 0x8b
0000            354   _D3SRC0         BIT 0x8c
0000            355   _D3SRC1         BIT 0x8d
0000            356   _D3AMEN         BIT 0x8e
0000            357   _D23REFSL       BIT 0x8f
0000            358   _D0UDIS         BIT 0x98
0000            359   _D1UDIS         BIT 0x99
0000            360   _D2UDIS         BIT 0x9a
0000            361   _D3UDIS         BIT 0x9b
0000            362   _EX0            BIT 0xa8
0000            363   _ET0            BIT 0xa9
0000            364   _EX1            BIT 0xaa
0000            365   _ET1            BIT 0xab
0000            366   _ES0            BIT 0xac
0000            367   _ET2            BIT 0xad
0000            368   _ESPI0          BIT 0xae
0000            369   _EA             BIT 0xaf
0000            370   _PX0            BIT 0xb8
0000            371   _PT0            BIT 0xb9
0000            372   _PX1            BIT 0xba
0000            373   _PT1            BIT 0xbb
0000            374   _PS0            BIT 0xbc
0000            375   _PT2            BIT 0xbd
0000            376   _PSPI0          BIT 0xbe
0000            377   _P0_0           BIT 0x80
0000            378   _P0_1           BIT 0x81
0000            379   _P0_2           BIT 0x82
0000            380   _P0_3           BIT 0x83
0000            381   _P0_4           BIT 0x84
0000            382   _P0_5           BIT 0x85
0000            383   _P0_6           BIT 0x86
0000            384   _P0_7           BIT 0x87
0000            385   _P1_0           BIT 0x90
0000            386   _P1_1           BIT 0x91
0000            387   _P1_2           BIT 0x92
0000            388   _P1_3           BIT 0x93
0000            389   _P1_4           BIT 0x94
0000            390   _P1_5           BIT 0x95
0000            391   _P1_6           BIT 0x96
0000            392   _P1_7           BIT 0x97
0000            393   _P2_0           BIT 0xa0
0000            394   _P2_1           BIT 0xa1
0000            395   _P2_2           BIT 0xa2
0000            396   _P2_3           BIT 0xa3
0000            397   _P2_4           BIT 0xa4
0000            398   _P2_5           BIT 0xa5
0000            399   _P2_6           BIT 0xa6
0000            400   _P3_0           BIT 0xb0
0000            401   _P3_1           BIT 0xb1
0000            402   _P3_2           BIT 0xb2
0000            403   _P3_3           BIT 0xb3
0000            404   _P3_4           BIT 0xb4
0000            405   _P3_7           BIT 0xb7
0000            406   _CCF0           BIT 0xd8
0000            407   _CCF1           BIT 0xd9
0000            408   _CCF2           BIT 0xda
0000            409   _CCF3           BIT 0xdb
0000            410   _CCF4           BIT 0xdc
0000            411   _CCF5           BIT 0xdd
0000            412   _CR             BIT 0xde
0000            413   _CF             BIT 0xdf
0000            414   _PARITY         BIT 0xd0
0000            415   _F1             BIT 0xd1
0000            416   _OV             BIT 0xd2
0000            417   _RS0            BIT 0xd3
0000            418   _RS1            BIT 0xd4
0000            419   _F0             BIT 0xd5
0000            420   _AC             BIT 0xd6
0000            421   _CY             BIT 0xd7
0000            422   _RI             BIT 0x98
0000            423   _TI             BIT 0x99
0000            424   _RB8            BIT 0x9a
0000            425   _TB8            BIT 0x9b
0000            426   _REN            BIT 0x9c
0000            427   _CE             BIT 0x9d
0000            428   _SMODE          BIT 0x9e
0000            429   _RI1            BIT 0xc8
0000            430   _TI1            BIT 0xc9
0000            431   _RBX1           BIT 0xca
0000            432   _TBX1           BIT 0xcb
0000            433   _REN1           BIT 0xcc
0000            434   _PERR1          BIT 0xcd
0000            435   _OVR1           BIT 0xce
0000            436   _SI             BIT 0xc0
0000            437   _ACK            BIT 0xc1
0000            438   _ARBLOST        BIT 0xc2
0000            439   _ACKRQ          BIT 0xc3
0000            440   _STO            BIT 0xc4
0000            441   _STA            BIT 0xc5
0000            442   _TXMODE         BIT 0xc6
0000            443   _MASTER         BIT 0xc7
0000            444   _SPIEN          BIT 0xf8
0000            445   _TXNF           BIT 0xf9
0000            446   _NSSMD0         BIT 0xfa
0000            447   _NSSMD1         BIT 0xfb
0000            448   _RXOVRN         BIT 0xfc
0000            449   _MODF           BIT 0xfd
0000            450   _WCOL           BIT 0xfe
0000            451   _SPIF           BIT 0xff
0000            452   _IT0            BIT 0x88
0000            453   _IE0            BIT 0x89
0000            454   _IT1            BIT 0x8a
0000            455   _IE1            BIT 0x8b
0000            456   _TR0            BIT 0x8c
0000            457   _TF0            BIT 0x8d
0000            458   _TR1            BIT 0x8e
0000            459   _TF1            BIT 0x8f
0000            460   _T2XCLK0        BIT 0xc8
0000            461   _T2XCLK1        BIT 0xc9
0000            462   _TR2            BIT 0xca
0000            463   _T2SPLIT        BIT 0xcb
0000            464   _TF2CEN         BIT 0xcc
0000            465   _TF2LEN         BIT 0xcd
0000            466   _TF2L           BIT 0xce
0000            467   _TF2H           BIT 0xcf
0000            468   _T4XCLK0        BIT 0x98
0000            469   _T4XCLK1        BIT 0x99
0000            470   _TR4            BIT 0x9a
0000            471   _T4SPLIT        BIT 0x9b
0000            472   _TF4CEN         BIT 0x9c
0000            473   _TF4LEN         BIT 0x9d
0000            474   _TF4L           BIT 0x9e
0000            475   _TF4H           BIT 0x9f
0000            476   _T5XCLK0        BIT 0xc0
0000            477   _T5XCLK1        BIT 0xc1
0000            478   _TR5            BIT 0xc2
0000            479   _T5SPLIT        BIT 0xc3
0000            480   _TF5CEN         BIT 0xc4
0000            481   _TF5LEN         BIT 0xc5
0000            482   _TF5L           BIT 0xc6
0000            483   _TF5H           BIT 0xc7
0000            484   _RIE            BIT 0xd8
0000            485   _RXTO0          BIT 0xd9
0000            486   _RXTO1          BIT 0xda
0000            487   _RFRQ           BIT 0xdb
0000            488   _TIE            BIT 0xdc
0000            489   _TXHOLD         BIT 0xdd
0000            490   _TXNF1          BIT 0xde
0000            491   _TFRQ           BIT 0xdf
0000            492   ;--------------------------------------------------------
0000            493   ; overlayable register banks
0000            494   ;--------------------------------------------------------
0000            495            rbank0 segment data overlay
0000            496   ;--------------------------------------------------------
0000            497   ; internal ram data
0000            498   ;--------------------------------------------------------
0000            499            rseg R_DSEG
0000            500   _overflow_count:
0000            501            ds 1
0001            502   _LCDprint_PARM_2:
0001            503            ds 1
0002            504   _getsn_PARM_2:
0002            505            ds 2
0004            506   _getsn_buff_1_46:
0004            507            ds 3
0007            508   _getsn_sloc0_1_0:
0007            509            ds 2
0009            510   _intToStr_PARM_2:
0009            511            ds 3
000C            512   _intToStr_PARM_3:
000C            513            ds 2
000E            514   _intToStr_i_1_55:
000E            515            ds 2
0010            516   _power_PARM_2:
0010            517            ds 2
0012            518   _ftoa_PARM_2:
0012            519            ds 3
0015            520   _ftoa_PARM_3:
0015            521            ds 2
0017            522   _ftoa_ipart_1_61:
0017            523            ds 2
0019            524   _ftoa_fpart_1_61:
0019            525            ds 4
001D            526   _main_buff_1_64:
001D            527            ds 17
002E            528   ;--------------------------------------------------------
002E            529   ; overlayable items in internal ram 
002E            530   ;--------------------------------------------------------
0000            531            rseg    R_OSEG
0000            532            rseg    R_OSEG
0000            533   _reverse_PARM_2:
0000            534            ds 2
0002            535   _reverse_str_1_51:
0002            536            ds 3
0005            537   _reverse_i_1_52:
0005            538            ds 2
0007            539   _reverse_temp_1_52:
0007            540            ds 2
0009            541   _reverse_sloc0_1_0:
0009            542            ds 3
000C            543   ;--------------------------------------------------------
000C            544   ; indirectly addressable internal ram data
000C            545   ;--------------------------------------------------------
0000            546            rseg R_ISEG
0000            547   ;--------------------------------------------------------
0000            548   ; absolute internal ram data
0000            549   ;--------------------------------------------------------
0000            550            DSEG
0000            551   ;--------------------------------------------------------
0000            552   ; bit data
0000            553   ;--------------------------------------------------------
0000            554            rseg R_BSEG
0000            555   _LCDprint_PARM_3:
0000            556            DBIT    1
0001            557   ;--------------------------------------------------------
0001            558   ; paged external ram data
0001            559   ;--------------------------------------------------------
0000            560            rseg R_PSEG
0000            561   ;--------------------------------------------------------
0000            562   ; external ram data
0000            563   ;--------------------------------------------------------
0000            564            rseg R_XSEG
0000            565   ;--------------------------------------------------------
0000            566   ; absolute external ram data
0000            567   ;--------------------------------------------------------
0000            568            XSEG
0000            569   ;--------------------------------------------------------
0000            570   ; external initialized ram data
0000            571   ;--------------------------------------------------------
0000            572            rseg R_IXSEG
0000            573            rseg R_HOME
0000            574            rseg R_GSINIT
0000            575            rseg R_CSEG
0000            576   ;--------------------------------------------------------
0000            577   ; Reset entry point and interrupt vectors
0000            578   ;--------------------------------------------------------
0000            579            CSEG at 0x0000
0000 020100     580            ljmp    _crt0
0003            581   ;--------------------------------------------------------
0003            582   ; global & static initialisations
0003            583   ;--------------------------------------------------------
0000            584            rseg R_HOME
0000            585            rseg R_GSINIT
0000            586            rseg R_GSINIT
0000            587   ;--------------------------------------------------------
0000            588   ; data variables initialization
0000            589   ;--------------------------------------------------------
0000            590            rseg R_DINIT
0000            591            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            592   ;--------------------------------------------------------
0000            593   ; code
0000            594   ;--------------------------------------------------------
0000            595            rseg R_CSEG
0000            596   ;------------------------------------------------------------
0000            597   ;Allocation info for local variables in function '_c51_external_startup'
0000            598   ;------------------------------------------------------------
0000            599   ;------------------------------------------------------------
0000            600   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:26: char _c51_external_startup (void)
0000            601   ;        -----------------------------------------
0000            602   ;         function _c51_external_startup
0000            603   ;        -----------------------------------------
0000            604   __c51_external_startup:
0000            605            using   0
0000            606   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:29: SFRPAGE = 0x00;
0000 75A700     607            mov     _SFRPAGE,#0x00
0003            608   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:30: WDTCN = 0xDE; //First key
0003 7597DE     609            mov     _WDTCN,#0xDE
0006            610   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:31: WDTCN = 0xAD; //Second key
0006 7597AD     611            mov     _WDTCN,#0xAD
0009            612   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:33: VDM0CN |= 0x80;
0009 43FF80     613            orl     _VDM0CN,#0x80
000C            614   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:34: RSTSRC = 0x02;
000C 75EF02     615            mov     _RSTSRC,#0x02
000F            616   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:41: SFRPAGE = 0x10;
000F 75A710     617            mov     _SFRPAGE,#0x10
0012            618   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:42: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     619            mov     _PFE0CN,#0x20
0015            620   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:43: SFRPAGE = 0x00;
0015 75A700     621            mov     _SFRPAGE,#0x00
0018            622   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:64: CLKSEL = 0x00;
0018 75A900     623            mov     _CLKSEL,#0x00
001B            624   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:65: CLKSEL = 0x00;
001B 75A900     625            mov     _CLKSEL,#0x00
001E            626   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:66: while ((CLKSEL & 0x80) == 0);
001E            627   L002001?:
001E E5A9       628            mov     a,_CLKSEL
0020 30E708     629            jnb     acc.7,L002001?
0023            630   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:67: CLKSEL = 0x03;
0023 75A903     631            mov     _CLKSEL,#0x03
0026            632   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:68: CLKSEL = 0x03;
0026 75A903     633            mov     _CLKSEL,#0x03
0029            634   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:69: while ((CLKSEL & 0x80) == 0);
0029            635   L002004?:
0029 E5A9       636            mov     a,_CLKSEL
002B 30E788     637            jnb     acc.7,L002004?
002E            638   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:74: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     639            orl     _P0MDOUT,#0x10
0031            640   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:75: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     641            mov     _XBR0,#0x01
0034            642   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:76: XBR1     = 0X10; // Enable T0 on P0.0
0034 75E210     643            mov     _XBR1,#0x10
0037            644   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:77: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     645            mov     _XBR2,#0x40
003A            646   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:83: SCON0 = 0x10;
003A 759810     647            mov     _SCON0,#0x10
003D            648   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:84: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     649            mov     _CKCON0,_CKCON0
0040            650   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:85: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     651            mov     _TH1,#0xE6
0043            652   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:86: TL1 = TH1;      // Init Timer1
0043 858D8B     653            mov     _TL1,_TH1
0046            654   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:87: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     655            anl     _TMOD,#0x0F
0049            656   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:88: TMOD |=  0x20;                       
0049 438920     657            orl     _TMOD,#0x20
004C            658   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:89: TR1 = 1; // START Timer1
004C D28E       659            setb    _TR1
004E            660   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:90: TI = 1;  // Indicate TX0 ready
004E D299       661            setb    _TI
0050            662   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:92: return 0;
0050 758200     663            mov     dpl,#0x00
0053 22         664            ret
0054            665   ;------------------------------------------------------------
0054            666   ;Allocation info for local variables in function 'Timer3us'
0054            667   ;------------------------------------------------------------
0054            668   ;us                        Allocated to registers r2 
0054            669   ;i                         Allocated to registers r3 
0054            670   ;------------------------------------------------------------
0054            671   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:96: void Timer3us(unsigned char us)
0054            672   ;        -----------------------------------------
0054            673   ;         function Timer3us
0054            674   ;        -----------------------------------------
0054            675   _Timer3us:
0054 AA82       676            mov     r2,dpl
0056            677   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:101: CKCON0|=0b_0100_0000;
0056 438E40     678            orl     _CKCON0,#0x40
0059            679   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:103: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0059 7592B8     680            mov     _TMR3RL,#0xB8
005C 7593FF     681            mov     (_TMR3RL >> 8),#0xFF
005F            682   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:104: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005F 859294     683            mov     _TMR3,_TMR3RL
0062 859395     684            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            685   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:106: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0065 759104     686            mov     _TMR3CN0,#0x04
0068            687   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0068 7B00       688            mov     r3,#0x00
006A            689   L003006?:
006A C3         690            clr     c
006B EB         691            mov     a,r3
006C 9A         692            subb    a,r2
006D 5001       693            jnc     L003009?
006F            694   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:109: while (!(TMR3CN0 & 0x80));  // Wait for overflow
006F            695   L003001?:
006F E591       696            mov     a,_TMR3CN0
0071 30E788     697            jnb     acc.7,L003001?
0074            698   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:110: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0074 53917F     699            anl     _TMR3CN0,#0x7F
0077            700   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:111: if (TF0)
0077            701   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:113: TF0=0;
0077 108DC8     702            jbc     _TF0,L003019?
007A 8001       703            sjmp    L003008?
007C            704   L003019?:
007C            705   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:114: overflow_count++;
007C 05E0       706            inc     _overflow_count
007E            707   L003008?:
007E            708   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
007E 0B         709            inc     r3
007F 8001       710            sjmp    L003006?
0081            711   L003009?:
0081            712   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:117: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0081 759100     713            mov     _TMR3CN0,#0x00
0084 22         714            ret
0085            715   ;------------------------------------------------------------
0085            716   ;Allocation info for local variables in function 'waitms'
0085            717   ;------------------------------------------------------------
0085            718   ;ms                        Allocated to registers r2 r3 
0085            719   ;j                         Allocated to registers r2 r3 
0085            720   ;------------------------------------------------------------
0085            721   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:120: void waitms (unsigned int ms)
0085            722   ;        -----------------------------------------
0085            723   ;         function waitms
0085            724   ;        -----------------------------------------
0085            725   _waitms:
0085 AA82       726            mov     r2,dpl
0087 AB83       727            mov     r3,dph
0089            728   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:123: for(j=ms; j!=0; j--)
0089            729   L004001?:
0089 BA00C8     730            cjne    r2,#0x00,L004010?
008C BB00C8     731            cjne    r3,#0x00,L004010?
008F 22         732            ret
0090            733   L004010?:
0090            734   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:125: Timer3us(249);
0090 7582F9     735            mov     dpl,#0xF9
0093 C002       736            push    ar2
0095 C003       737            push    ar3
0097 120100     738            lcall   _Timer3us
009A            739   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:126: Timer3us(249);
009A 7582F9     740            mov     dpl,#0xF9
009D 120100     741            lcall   _Timer3us
00A0            742   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:127: Timer3us(249);
00A0 7582F9     743            mov     dpl,#0xF9
00A3 120100     744            lcall   _Timer3us
00A6            745   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:128: Timer3us(250);
00A6 7582FA     746            mov     dpl,#0xFA
00A9 120100     747            lcall   _Timer3us
00AC D003       748            pop     ar3
00AE D002       749            pop     ar2
00B0            750   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:123: for(j=ms; j!=0; j--)
00B0 1A         751            dec     r2
00B1 BAFF08     752            cjne    r2,#0xff,L004011?
00B4 1B         753            dec     r3
00B5            754   L004011?:
00B5 8001       755            sjmp    L004001?
00B7            756   ;------------------------------------------------------------
00B7            757   ;Allocation info for local variables in function 'TIMER0_Init'
00B7            758   ;------------------------------------------------------------
00B7            759   ;------------------------------------------------------------
00B7            760   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:132: void TIMER0_Init(void)
00B7            761   ;        -----------------------------------------
00B7            762   ;         function TIMER0_Init
00B7            763   ;        -----------------------------------------
00B7            764   _TIMER0_Init:
00B7            765   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:134: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00B7 5389F0     766            anl     _TMOD,#0xF0
00BA            767   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:135: TMOD|=0b_0000_0101; // Timer/Counter 0 used as a 16-bit counter
00BA 438905     768            orl     _TMOD,#0x05
00BD            769   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:136: TR0=0; // Stop Timer/Counter 0
00BD C28C       770            clr     _TR0
00BF 22         771            ret
00C0            772   ;------------------------------------------------------------
00C0            773   ;Allocation info for local variables in function 'LCD_pulse'
00C0            774   ;------------------------------------------------------------
00C0            775   ;------------------------------------------------------------
00C0            776   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:138: void LCD_pulse (void)
00C0            777   ;        -----------------------------------------
00C0            778   ;         function LCD_pulse
00C0            779   ;        -----------------------------------------
00C0            780   _LCD_pulse:
00C0            781   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:140: LCD_E=1;
00C0 D2A5       782            setb    _P2_5
00C2            783   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:141: Timer3us(40);
00C2 758228     784            mov     dpl,#0x28
00C5 120100     785            lcall   _Timer3us
00C8            786   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:142: LCD_E=0;
00C8 C2A5       787            clr     _P2_5
00CA 22         788            ret
00CB            789   ;------------------------------------------------------------
00CB            790   ;Allocation info for local variables in function 'LCD_byte'
00CB            791   ;------------------------------------------------------------
00CB            792   ;x                         Allocated to registers r2 
00CB            793   ;------------------------------------------------------------
00CB            794   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:145: void LCD_byte (unsigned char x)
00CB            795   ;        -----------------------------------------
00CB            796   ;         function LCD_byte
00CB            797   ;        -----------------------------------------
00CB            798   _LCD_byte:
00CB AA82       799            mov     r2,dpl
00CD            800   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:148: ACC=x; //Send high nible
00CD 8AE0       801            mov     _ACC,r2
00CF            802   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:149: LCD_D7=ACC_7;
00CF A2E7       803            mov     c,_ACC_7
00D1 92A1       804            mov     _P2_1,c
00D3            805   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:150: LCD_D6=ACC_6;
00D3 A2E6       806            mov     c,_ACC_6
00D5 92A2       807            mov     _P2_2,c
00D7            808   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:151: LCD_D5=ACC_5;
00D7 A2E5       809            mov     c,_ACC_5
00D9 92A3       810            mov     _P2_3,c
00DB            811   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:152: LCD_D4=ACC_4;
00DB A2E4       812            mov     c,_ACC_4
00DD 92A4       813            mov     _P2_4,c
00DF            814   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:153: LCD_pulse();
00DF C002       815            push    ar2
00E1 120100     816            lcall   _LCD_pulse
00E4            817   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:154: Timer3us(40);
00E4 758228     818            mov     dpl,#0x28
00E7 120100     819            lcall   _Timer3us
00EA D002       820            pop     ar2
00EC            821   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:155: ACC=x; //Send low nible
00EC 8AE0       822            mov     _ACC,r2
00EE            823   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:156: LCD_D7=ACC_3;
00EE A2E3       824            mov     c,_ACC_3
00F0 92A1       825            mov     _P2_1,c
00F2            826   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:157: LCD_D6=ACC_2;
00F2 A2E2       827            mov     c,_ACC_2
00F4 92A2       828            mov     _P2_2,c
00F6            829   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:158: LCD_D5=ACC_1;
00F6 A2E1       830            mov     c,_ACC_1
00F8 92A3       831            mov     _P2_3,c
00FA            832   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:159: LCD_D4=ACC_0;
00FA A2E0       833            mov     c,_ACC_0
00FC 92A4       834            mov     _P2_4,c
00FE            835   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:160: LCD_pulse();
00FE 020100     836            ljmp    _LCD_pulse
0101            837   ;------------------------------------------------------------
0101            838   ;Allocation info for local variables in function 'WriteData'
0101            839   ;------------------------------------------------------------
0101            840   ;x                         Allocated to registers r2 
0101            841   ;------------------------------------------------------------
0101            842   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:163: void WriteData (unsigned char x)
0101            843   ;        -----------------------------------------
0101            844   ;         function WriteData
0101            845   ;        -----------------------------------------
0101            846   _WriteData:
0101 AA82       847            mov     r2,dpl
0103            848   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:165: LCD_RS=1;
0103 D2A6       849            setb    _P2_6
0105            850   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:166: LCD_byte(x);
0105 8A82       851            mov     dpl,r2
0107 120100     852            lcall   _LCD_byte
010A            853   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:167: waitms(2);
010A 900002     854            mov     dptr,#0x0002
010D 020100     855            ljmp    _waitms
0110            856   ;------------------------------------------------------------
0110            857   ;Allocation info for local variables in function 'WriteCommand'
0110            858   ;------------------------------------------------------------
0110            859   ;x                         Allocated to registers r2 
0110            860   ;------------------------------------------------------------
0110            861   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:170: void WriteCommand (unsigned char x)
0110            862   ;        -----------------------------------------
0110            863   ;         function WriteCommand
0110            864   ;        -----------------------------------------
0110            865   _WriteCommand:
0110 AA82       866            mov     r2,dpl
0112            867   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:172: LCD_RS=0;
0112 C2A6       868            clr     _P2_6
0114            869   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:173: LCD_byte(x);
0114 8A82       870            mov     dpl,r2
0116 120100     871            lcall   _LCD_byte
0119            872   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:174: waitms(5);
0119 900005     873            mov     dptr,#0x0005
011C 020100     874            ljmp    _waitms
011F            875   ;------------------------------------------------------------
011F            876   ;Allocation info for local variables in function 'LCD_4BIT'
011F            877   ;------------------------------------------------------------
011F            878   ;------------------------------------------------------------
011F            879   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:177: void LCD_4BIT (void)
011F            880   ;        -----------------------------------------
011F            881   ;         function LCD_4BIT
011F            882   ;        -----------------------------------------
011F            883   _LCD_4BIT:
011F            884   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:179: LCD_E=0; // Resting state of LCD's enable is zero
011F C2A5       885            clr     _P2_5
0121            886   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:181: waitms(20);
0121 900014     887            mov     dptr,#0x0014
0124 120100     888            lcall   _waitms
0127            889   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:183: WriteCommand(0x33);
0127 758233     890            mov     dpl,#0x33
012A 120100     891            lcall   _WriteCommand
012D            892   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:184: WriteCommand(0x33);
012D 758233     893            mov     dpl,#0x33
0130 120100     894            lcall   _WriteCommand
0133            895   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:185: WriteCommand(0x32); // Change to 4-bit mode
0133 758232     896            mov     dpl,#0x32
0136 120100     897            lcall   _WriteCommand
0139            898   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:188: WriteCommand(0x28);
0139 758228     899            mov     dpl,#0x28
013C 120100     900            lcall   _WriteCommand
013F            901   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:189: WriteCommand(0x0c);
013F 75820C     902            mov     dpl,#0x0C
0142 120100     903            lcall   _WriteCommand
0145            904   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:190: WriteCommand(0x01); // Clear screen command (takes some time)
0145 758201     905            mov     dpl,#0x01
0148 120100     906            lcall   _WriteCommand
014B            907   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:191: waitms(20); // Wait for clear screen command to finsih.
014B 900014     908            mov     dptr,#0x0014
014E 020100     909            ljmp    _waitms
0151            910   ;------------------------------------------------------------
0151            911   ;Allocation info for local variables in function 'LCDprint'
0151            912   ;------------------------------------------------------------
0151            913   ;line                      Allocated with name '_LCDprint_PARM_2'
0151            914   ;string                    Allocated to registers r2 r3 r4 
0151            915   ;j                         Allocated to registers r5 r6 
0151            916   ;------------------------------------------------------------
0151            917   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:194: void LCDprint(char * string, unsigned char line, bit clear)
0151            918   ;        -----------------------------------------
0151            919   ;         function LCDprint
0151            920   ;        -----------------------------------------
0151            921   _LCDprint:
0151 AA82       922            mov     r2,dpl
0153 AB83       923            mov     r3,dph
0155 ACF0       924            mov     r4,b
0157            925   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:198: WriteCommand(line==2?0xc0:0x80);
0157 7402       926            mov     a,#0x02
0159 B5A088     927            cjne    a,_LCDprint_PARM_2,L011013?
015C 7DC0       928            mov     r5,#0xC0
015E 8001       929            sjmp    L011014?
0160            930   L011013?:
0160 7D80       931            mov     r5,#0x80
0162            932   L011014?:
0162 8D82       933            mov     dpl,r5
0164 C002       934            push    ar2
0166 C003       935            push    ar3
0168 C004       936            push    ar4
016A 120100     937            lcall   _WriteCommand
016D            938   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:199: waitms(5);
016D 900005     939            mov     dptr,#0x0005
0170 120100     940            lcall   _waitms
0173 D004       941            pop     ar4
0175 D003       942            pop     ar3
0177 D002       943            pop     ar2
0179            944   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:200: for(j=0; string[j]!=0; j++)  WriteData(string[j]);// Write the message
0179 7D00       945            mov     r5,#0x00
017B 7E00       946            mov     r6,#0x00
017D            947   L011003?:
017D ED         948            mov     a,r5
017E 2A         949            add     a,r2
017F FF         950            mov     r7,a
0180 EE         951            mov     a,r6
0181 3B         952            addc    a,r3
0182 F8         953            mov     r0,a
0183 8C01       954            mov     ar1,r4
0185 8F82       955            mov     dpl,r7
0187 8883       956            mov     dph,r0
0189 89F0       957            mov     b,r1
018B 120100     958            lcall   __gptrget
018E FF         959            mov     r7,a
018F 6001       960            jz      L011006?
0191 8F82       961            mov     dpl,r7
0193 C002       962            push    ar2
0195 C003       963            push    ar3
0197 C004       964            push    ar4
0199 C005       965            push    ar5
019B C006       966            push    ar6
019D 120100     967            lcall   _WriteData
01A0 D006       968            pop     ar6
01A2 D005       969            pop     ar5
01A4 D004       970            pop     ar4
01A6 D003       971            pop     ar3
01A8 D002       972            pop     ar2
01AA 0D         973            inc     r5
01AB BD0008     974            cjne    r5,#0x00,L011003?
01AE 0E         975            inc     r6
01AF 8001       976            sjmp    L011003?
01B1            977   L011006?:
01B1            978   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:201: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01B1 30B0C8     979            jnb     _LCDprint_PARM_3,L011011?
01B4 8D02       980            mov     ar2,r5
01B6 8E03       981            mov     ar3,r6
01B8            982   L011007?:
01B8 C3         983            clr     c
01B9 EA         984            mov     a,r2
01BA 9410       985            subb    a,#0x10
01BC EB         986            mov     a,r3
01BD 6480       987            xrl     a,#0x80
01BF 9480       988            subb    a,#0x80
01C1 5001       989            jnc     L011011?
01C3 758220     990            mov     dpl,#0x20
01C6 C002       991            push    ar2
01C8 C003       992            push    ar3
01CA 120100     993            lcall   _WriteData
01CD D003       994            pop     ar3
01CF D002       995            pop     ar2
01D1 0A         996            inc     r2
01D2 BA0008     997            cjne    r2,#0x00,L011007?
01D5 0B         998            inc     r3
01D6 8001       999            sjmp    L011007?
01D8           1000   L011011?:
01D8 22        1001            ret
01D9           1002   ;------------------------------------------------------------
01D9           1003   ;Allocation info for local variables in function 'getsn'
01D9           1004   ;------------------------------------------------------------
01D9           1005   ;len                       Allocated with name '_getsn_PARM_2'
01D9           1006   ;buff                      Allocated with name '_getsn_buff_1_46'
01D9           1007   ;j                         Allocated with name '_getsn_sloc0_1_0'
01D9           1008   ;c                         Allocated to registers r3 
01D9           1009   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
01D9           1010   ;------------------------------------------------------------
01D9           1011   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:204: int getsn (char * buff, int len)
01D9           1012   ;        -----------------------------------------
01D9           1013   ;         function getsn
01D9           1014   ;        -----------------------------------------
01D9           1015   _getsn:
01D9 8582D8    1016            mov     _getsn_buff_1_46,dpl
01DC 8583D9    1017            mov     (_getsn_buff_1_46 + 1),dph
01DF 85F0DA    1018            mov     (_getsn_buff_1_46 + 2),b
01E2           1019   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:209: for(j=0; j<(len-1); j++)
01E2 E4        1020            clr     a
01E3 F528      1021            mov     _getsn_sloc0_1_0,a
01E5 F529      1022            mov     (_getsn_sloc0_1_0 + 1),a
01E7 E550      1023            mov     a,_getsn_PARM_2
01E9 24FF      1024            add     a,#0xff
01EB FF        1025            mov     r7,a
01EC E551      1026            mov     a,(_getsn_PARM_2 + 1)
01EE 34FF      1027            addc    a,#0xff
01F0 F8        1028            mov     r0,a
01F1 7900      1029            mov     r1,#0x00
01F3 7A00      1030            mov     r2,#0x00
01F5           1031   L012005?:
01F5 C3        1032            clr     c
01F6 E9        1033            mov     a,r1
01F7 9F        1034            subb    a,r7
01F8 EA        1035            mov     a,r2
01F9 6480      1036            xrl     a,#0x80
01FB 88F0      1037            mov     b,r0
01FD 63F080    1038            xrl     b,#0x80
0200 95F0      1039            subb    a,b
0202 5001      1040            jnc     L012008?
0204           1041   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:211: c=getchar();
0204 C002      1042            push    ar2
0206 C007      1043            push    ar7
0208 C000      1044            push    ar0
020A C001      1045            push    ar1
020C 120100    1046            lcall   _getchar
020F AB82      1047            mov     r3,dpl
0211 D001      1048            pop     ar1
0213 D000      1049            pop     ar0
0215 D007      1050            pop     ar7
0217 D002      1051            pop     ar2
0219           1052   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:212: if ( (c=='\n') || (c=='\r') )
0219 BB0A08    1053            cjne    r3,#0x0A,L012015?
021C 8001      1054            sjmp    L012001?
021E           1055   L012015?:
021E BB0D88    1056            cjne    r3,#0x0D,L012002?
0221           1057   L012001?:
0221           1058   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:214: buff[j]=0;
0221 E528      1059            mov     a,_getsn_sloc0_1_0
0223 25D8      1060            add     a,_getsn_buff_1_46
0225 FC        1061            mov     r4,a
0226 E529      1062            mov     a,(_getsn_sloc0_1_0 + 1)
0228 35D9      1063            addc    a,(_getsn_buff_1_46 + 1)
022A FD        1064            mov     r5,a
022B AEDA      1065            mov     r6,(_getsn_buff_1_46 + 2)
022D 8C82      1066            mov     dpl,r4
022F 8D83      1067            mov     dph,r5
0231 8EF0      1068            mov     b,r6
0233 E4        1069            clr     a
0234 120100    1070            lcall   __gptrput
0237           1071   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:215: return j;
0237 852882    1072            mov     dpl,_getsn_sloc0_1_0
023A 852983    1073            mov     dph,(_getsn_sloc0_1_0 + 1)
023D 22        1074            ret
023E           1075   L012002?:
023E           1076   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:219: buff[j]=c;
023E E9        1077            mov     a,r1
023F 25D8      1078            add     a,_getsn_buff_1_46
0241 FC        1079            mov     r4,a
0242 EA        1080            mov     a,r2
0243 35D9      1081            addc    a,(_getsn_buff_1_46 + 1)
0245 FD        1082            mov     r5,a
0246 AEDA      1083            mov     r6,(_getsn_buff_1_46 + 2)
0248 8C82      1084            mov     dpl,r4
024A 8D83      1085            mov     dph,r5
024C 8EF0      1086            mov     b,r6
024E EB        1087            mov     a,r3
024F 120100    1088            lcall   __gptrput
0252           1089   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:209: for(j=0; j<(len-1); j++)
0252 09        1090            inc     r1
0253 B90008    1091            cjne    r1,#0x00,L012018?
0256 0A        1092            inc     r2
0257           1093   L012018?:
0257 8928      1094            mov     _getsn_sloc0_1_0,r1
0259 8A29      1095            mov     (_getsn_sloc0_1_0 + 1),r2
025B 8001      1096            sjmp    L012005?
025D           1097   L012008?:
025D           1098   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:222: buff[j]=0;
025D E528      1099            mov     a,_getsn_sloc0_1_0
025F 25D8      1100            add     a,_getsn_buff_1_46
0261 FA        1101            mov     r2,a
0262 E529      1102            mov     a,(_getsn_sloc0_1_0 + 1)
0264 35D9      1103            addc    a,(_getsn_buff_1_46 + 1)
0266 FB        1104            mov     r3,a
0267 ACDA      1105            mov     r4,(_getsn_buff_1_46 + 2)
0269 8A82      1106            mov     dpl,r2
026B 8B83      1107            mov     dph,r3
026D 8CF0      1108            mov     b,r4
026F E4        1109            clr     a
0270 120100    1110            lcall   __gptrput
0273           1111   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:223: return len;
0273 855082    1112            mov     dpl,_getsn_PARM_2
0276 855183    1113            mov     dph,(_getsn_PARM_2 + 1)
0279 22        1114            ret
027A           1115   ;------------------------------------------------------------
027A           1116   ;Allocation info for local variables in function 'reverse'
027A           1117   ;------------------------------------------------------------
027A           1118   ;len                       Allocated with name '_reverse_PARM_2'
027A           1119   ;str                       Allocated with name '_reverse_str_1_51'
027A           1120   ;i                         Allocated with name '_reverse_i_1_52'
027A           1121   ;j                         Allocated to registers r5 r6 
027A           1122   ;temp                      Allocated with name '_reverse_temp_1_52'
027A           1123   ;sloc0                     Allocated with name '_reverse_sloc0_1_0'
027A           1124   ;------------------------------------------------------------
027A           1125   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:227: void reverse(char* str, int len) 
027A           1126   ;        -----------------------------------------
027A           1127   ;         function reverse
027A           1128   ;        -----------------------------------------
027A           1129   _reverse:
027A 8582A8    1130            mov     _reverse_str_1_51,dpl
027D 8583A9    1131            mov     (_reverse_str_1_51 + 1),dph
0280 85F0AA    1132            mov     (_reverse_str_1_51 + 2),b
0283           1133   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:229: int i = 0, j = len - 1, temp; 
0283 E550      1134            mov     a,_reverse_PARM_2
0285 24FF      1135            add     a,#0xff
0287 FD        1136            mov     r5,a
0288 E551      1137            mov     a,(_reverse_PARM_2 + 1)
028A 34FF      1138            addc    a,#0xff
028C FE        1139            mov     r6,a
028D           1140   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:230: while (i < j) { 
028D E4        1141            clr     a
028E F5E8      1142            mov     _reverse_i_1_52,a
0290 F5E9      1143            mov     (_reverse_i_1_52 + 1),a
0292           1144   L013001?:
0292 C3        1145            clr     c
0293 E5E8      1146            mov     a,_reverse_i_1_52
0295 9D        1147            subb    a,r5
0296 E5E9      1148            mov     a,(_reverse_i_1_52 + 1)
0298 6480      1149            xrl     a,#0x80
029A 8EF0      1150            mov     b,r6
029C 63F080    1151            xrl     b,#0x80
029F 95F0      1152            subb    a,b
02A1 5001      1153            jnc     L013004?
02A3           1154   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:231: temp = str[i]; 
02A3 E5E8      1155            mov     a,_reverse_i_1_52
02A5 25A8      1156            add     a,_reverse_str_1_51
02A7 F9        1157            mov     r1,a
02A8 E5E9      1158            mov     a,(_reverse_i_1_52 + 1)
02AA 35A9      1159            addc    a,(_reverse_str_1_51 + 1)
02AC FA        1160            mov     r2,a
02AD ABAA      1161            mov     r3,(_reverse_str_1_51 + 2)
02AF 8982      1162            mov     dpl,r1
02B1 8A83      1163            mov     dph,r2
02B3 8BF0      1164            mov     b,r3
02B5 120100    1165            lcall   __gptrget
02B8 FC        1166            mov     r4,a
02B9 8C38      1167            mov     _reverse_temp_1_52,r4
02BB 33        1168            rlc     a
02BC 95E0      1169            subb    a,acc
02BE F539      1170            mov     (_reverse_temp_1_52 + 1),a
02C0           1171   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:232: str[i] = str[j]; 
02C0 ED        1172            mov     a,r5
02C1 25A8      1173            add     a,_reverse_str_1_51
02C3 F588      1174            mov     _reverse_sloc0_1_0,a
02C5 EE        1175            mov     a,r6
02C6 35A9      1176            addc    a,(_reverse_str_1_51 + 1)
02C8 F589      1177            mov     (_reverse_sloc0_1_0 + 1),a
02CA 85AA8A    1178            mov     (_reverse_sloc0_1_0 + 2),(_reverse_str_1_51 + 2)
02CD 858882    1179            mov     dpl,_reverse_sloc0_1_0
02D0 858983    1180            mov     dph,(_reverse_sloc0_1_0 + 1)
02D3 858AF0    1181            mov     b,(_reverse_sloc0_1_0 + 2)
02D6 120100    1182            lcall   __gptrget
02D9 FC        1183            mov     r4,a
02DA 8982      1184            mov     dpl,r1
02DC 8A83      1185            mov     dph,r2
02DE 8BF0      1186            mov     b,r3
02E0 120100    1187            lcall   __gptrput
02E3           1188   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:233: str[j] = temp; 
02E3 AA38      1189            mov     r2,_reverse_temp_1_52
02E5 858882    1190            mov     dpl,_reverse_sloc0_1_0
02E8 858983    1191            mov     dph,(_reverse_sloc0_1_0 + 1)
02EB 858AF0    1192            mov     b,(_reverse_sloc0_1_0 + 2)
02EE EA        1193            mov     a,r2
02EF 120100    1194            lcall   __gptrput
02F2           1195   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:234: i++; 
02F2 05E8      1196            inc     _reverse_i_1_52
02F4 E4        1197            clr     a
02F5 B5E8C8    1198            cjne    a,_reverse_i_1_52,L013010?
02F8 05E9      1199            inc     (_reverse_i_1_52 + 1)
02FA           1200   L013010?:
02FA           1201   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:235: j--; 
02FA 1D        1202            dec     r5
02FB BDFF08    1203            cjne    r5,#0xff,L013011?
02FE 1E        1204            dec     r6
02FF           1205   L013011?:
02FF 8001      1206            sjmp    L013001?
0301           1207   L013004?:
0301 22        1208            ret
0302           1209   ;------------------------------------------------------------
0302           1210   ;Allocation info for local variables in function 'intToStr'
0302           1211   ;------------------------------------------------------------
0302           1212   ;str                       Allocated with name '_intToStr_PARM_2'
0302           1213   ;d                         Allocated with name '_intToStr_PARM_3'
0302           1214   ;x                         Allocated to registers r2 r3 
0302           1215   ;i                         Allocated with name '_intToStr_i_1_55'
0302           1216   ;------------------------------------------------------------
0302           1217   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:243: int intToStr(int x, char str[], int d) 
0302           1218   ;        -----------------------------------------
0302           1219   ;         function intToStr
0302           1220   ;        -----------------------------------------
0302           1221   _intToStr:
0302 AA82      1222            mov     r2,dpl
0304 AB83      1223            mov     r3,dph
0306           1224   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:246: while (x) { 
0306 E4        1225            clr     a
0307 F578      1226            mov     _intToStr_i_1_55,a
0309 F579      1227            mov     (_intToStr_i_1_55 + 1),a
030B           1228   L014001?:
030B EA        1229            mov     a,r2
030C 4B        1230            orl     a,r3
030D 6001      1231            jz      L014012?
030F           1232   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:247: str[i++] = (x % 10) + '0'; 
030F AE78      1233            mov     r6,_intToStr_i_1_55
0311 AF79      1234            mov     r7,(_intToStr_i_1_55 + 1)
0313 0578      1235            inc     _intToStr_i_1_55
0315 E4        1236            clr     a
0316 B578C8    1237            cjne    a,_intToStr_i_1_55,L014016?
0319 0579      1238            inc     (_intToStr_i_1_55 + 1)
031B           1239   L014016?:
031B EE        1240            mov     a,r6
031C 2510      1241            add     a,_intToStr_PARM_2
031E FE        1242            mov     r6,a
031F EF        1243            mov     a,r7
0320 3511      1244            addc    a,(_intToStr_PARM_2 + 1)
0322 FF        1245            mov     r7,a
0323 A812      1246            mov     r0,(_intToStr_PARM_2 + 2)
0325 75000A    1247            mov     __modsint_PARM_2,#0x0A
0328 E4        1248            clr     a
0329 F501      1249            mov     (__modsint_PARM_2 + 1),a
032B 8A82      1250            mov     dpl,r2
032D 8B83      1251            mov     dph,r3
032F C002      1252            push    ar2
0331 C003      1253            push    ar3
0333 C006      1254            push    ar6
0335 C007      1255            push    ar7
0337 C000      1256            push    ar0
0339 120100    1257            lcall   __modsint
033C A982      1258            mov     r1,dpl
033E D000      1259            pop     ar0
0340 D007      1260            pop     ar7
0342 D006      1261            pop     ar6
0344 D003      1262            pop     ar3
0346 D002      1263            pop     ar2
0348 7430      1264            mov     a,#0x30
034A 29        1265            add     a,r1
034B 8E82      1266            mov     dpl,r6
034D 8F83      1267            mov     dph,r7
034F 88F0      1268            mov     b,r0
0351 120100    1269            lcall   __gptrput
0354           1270   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:248: x = x / 10; 
0354 75000A    1271            mov     __divsint_PARM_2,#0x0A
0357 E4        1272            clr     a
0358 F501      1273            mov     (__divsint_PARM_2 + 1),a
035A 8A82      1274            mov     dpl,r2
035C 8B83      1275            mov     dph,r3
035E 120100    1276            lcall   __divsint
0361 AA82      1277            mov     r2,dpl
0363 AB83      1278            mov     r3,dph
0365           1279   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:253: while (i < d) 
0365 8001      1280            sjmp    L014001?
0367           1281   L014012?:
0367 AA78      1282            mov     r2,_intToStr_i_1_55
0369 AB79      1283            mov     r3,(_intToStr_i_1_55 + 1)
036B           1284   L014004?:
036B C3        1285            clr     c
036C EA        1286            mov     a,r2
036D 95C0      1287            subb    a,_intToStr_PARM_3
036F EB        1288            mov     a,r3
0370 6480      1289            xrl     a,#0x80
0372 85C1F0    1290            mov     b,(_intToStr_PARM_3 + 1)
0375 63F080    1291            xrl     b,#0x80
0378 95F0      1292            subb    a,b
037A 5001      1293            jnc     L014006?
037C           1294   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:254: str[i++] = '0'; 
037C 8A04      1295            mov     ar4,r2
037E 8B05      1296            mov     ar5,r3
0380 0A        1297            inc     r2
0381 BA00A8    1298            cjne    r2,#0x00,L014018?
0384 0B        1299            inc     r3
0385           1300   L014018?:
0385 EC        1301            mov     a,r4
0386 2510      1302            add     a,_intToStr_PARM_2
0388 FC        1303            mov     r4,a
0389 ED        1304            mov     a,r5
038A 3511      1305            addc    a,(_intToStr_PARM_2 + 1)
038C FD        1306            mov     r5,a
038D AE12      1307            mov     r6,(_intToStr_PARM_2 + 2)
038F 8C82      1308            mov     dpl,r4
0391 8D83      1309            mov     dph,r5
0393 8EF0      1310            mov     b,r6
0395 7430      1311            mov     a,#0x30
0397 120100    1312            lcall   __gptrput
039A 8001      1313            sjmp    L014004?
039C           1314   L014006?:
039C           1315   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:256: reverse(str, i); 
039C 8A50      1316            mov     _reverse_PARM_2,r2
039E 8B51      1317            mov     (_reverse_PARM_2 + 1),r3
03A0 851082    1318            mov     dpl,_intToStr_PARM_2
03A3 851183    1319            mov     dph,(_intToStr_PARM_2 + 1)
03A6 8512F0    1320            mov     b,(_intToStr_PARM_2 + 2)
03A9 C002      1321            push    ar2
03AB C003      1322            push    ar3
03AD 120100    1323            lcall   _reverse
03B0 D003      1324            pop     ar3
03B2 D002      1325            pop     ar2
03B4           1326   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:257: str[i] = '\0'; 
03B4 EA        1327            mov     a,r2
03B5 2510      1328            add     a,_intToStr_PARM_2
03B7 FC        1329            mov     r4,a
03B8 EB        1330            mov     a,r3
03B9 3511      1331            addc    a,(_intToStr_PARM_2 + 1)
03BB FD        1332            mov     r5,a
03BC AE12      1333            mov     r6,(_intToStr_PARM_2 + 2)
03BE 8C82      1334            mov     dpl,r4
03C0 8D83      1335            mov     dph,r5
03C2 8EF0      1336            mov     b,r6
03C4 E4        1337            clr     a
03C5 120100    1338            lcall   __gptrput
03C8           1339   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:258: return i; 
03C8 8A82      1340            mov     dpl,r2
03CA 8B83      1341            mov     dph,r3
03CC 22        1342            ret
03CD           1343   ;------------------------------------------------------------
03CD           1344   ;Allocation info for local variables in function 'power'
03CD           1345   ;------------------------------------------------------------
03CD           1346   ;exponent                  Allocated with name '_power_PARM_2'
03CD           1347   ;base                      Allocated to registers r2 r3 
03CD           1348   ;result                    Allocated to registers r4 r5 
03CD           1349   ;------------------------------------------------------------
03CD           1350   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:260: float power(int base, int exponent)
03CD           1351   ;        -----------------------------------------
03CD           1352   ;         function power
03CD           1353   ;        -----------------------------------------
03CD           1354   _power:
03CD AA82      1355            mov     r2,dpl
03CF AB83      1356            mov     r3,dph
03D1           1357   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:263: int result = 1;
03D1 7C01      1358            mov     r4,#0x01
03D3 7D00      1359            mov     r5,#0x00
03D5           1360   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:264: for (exponent; exponent>0; exponent--)
03D5 AE70      1361            mov     r6,_power_PARM_2
03D7 AF71      1362            mov     r7,(_power_PARM_2 + 1)
03D9           1363   L015001?:
03D9 C3        1364            clr     c
03DA E4        1365            clr     a
03DB 9E        1366            subb    a,r6
03DC E4        1367            clr     a
03DD 6480      1368            xrl     a,#0x80
03DF 8FF0      1369            mov     b,r7
03E1 63F080    1370            xrl     b,#0x80
03E4 95F0      1371            subb    a,b
03E6 5001      1372            jnc     L015004?
03E8           1373   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:266: result = result * base;
03E8 8A00      1374            mov     __mulint_PARM_2,r2
03EA 8B01      1375            mov     (__mulint_PARM_2 + 1),r3
03EC 8C82      1376            mov     dpl,r4
03EE 8D83      1377            mov     dph,r5
03F0 C002      1378            push    ar2
03F2 C003      1379            push    ar3
03F4 C006      1380            push    ar6
03F6 C007      1381            push    ar7
03F8 120100    1382            lcall   __mulint
03FB AC82      1383            mov     r4,dpl
03FD AD83      1384            mov     r5,dph
03FF D007      1385            pop     ar7
0401 D006      1386            pop     ar6
0403 D003      1387            pop     ar3
0405 D002      1388            pop     ar2
0407           1389   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:264: for (exponent; exponent>0; exponent--)
0407 1E        1390            dec     r6
0408 BEFFE8    1391            cjne    r6,#0xff,L015011?
040B 1F        1392            dec     r7
040C           1393   L015011?:
040C 8001      1394            sjmp    L015001?
040E           1395   L015004?:
040E           1396   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:268: return result;
040E 8C82      1397            mov     dpl,r4
0410 8D83      1398            mov     dph,r5
0412 020100    1399            ljmp    ___sint2fs
0415           1400   ;------------------------------------------------------------
0415           1401   ;Allocation info for local variables in function 'ftoa'
0415           1402   ;------------------------------------------------------------
0415           1403   ;res                       Allocated with name '_ftoa_PARM_2'
0415           1404   ;afterpoint                Allocated with name '_ftoa_PARM_3'
0415           1405   ;n                         Allocated to registers r2 r3 r4 r5 
0415           1406   ;ipart                     Allocated with name '_ftoa_ipart_1_61'
0415           1407   ;fpart                     Allocated with name '_ftoa_fpart_1_61'
0415           1408   ;i                         Allocated to registers r6 r7 
0415           1409   ;------------------------------------------------------------
0415           1410   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:272: void ftoa(float n, char* res, int afterpoint) 
0415           1411   ;        -----------------------------------------
0415           1412   ;         function ftoa
0415           1413   ;        -----------------------------------------
0415           1414   _ftoa:
0415           1415   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:275: int ipart = (int)n; 
0415 AA82      1416            mov     r2,dpl
0417 AB83      1417            mov     r3,dph
0419 ACF0      1418            mov     r4,b
041B FD        1419            mov     r5,a
041C C002      1420            push    ar2
041E C003      1421            push    ar3
0420 C004      1422            push    ar4
0422 C005      1423            push    ar5
0424 120100    1424            lcall   ___fs2sint
0427           1425   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:278: float fpart = n - (float)ipart; 
0427 8582C8    1426            mov     _ftoa_ipart_1_61,dpl
042A 8583C9    1427            mov  (_ftoa_ipart_1_61 + 1),dph
042D 120100    1428            lcall   ___sint2fs
0430 A882      1429            mov     r0,dpl
0432 A983      1430            mov     r1,dph
0434 AEF0      1431            mov     r6,b
0436 FF        1432            mov     r7,a
0437 D005      1433            pop     ar5
0439 D004      1434            pop     ar4
043B D003      1435            pop     ar3
043D D002      1436            pop     ar2
043F C000      1437            push    ar0
0441 C001      1438            push    ar1
0443 C006      1439            push    ar6
0445 C007      1440            push    ar7
0447 8A82      1441            mov     dpl,r2
0449 8B83      1442            mov     dph,r3
044B 8CF0      1443            mov     b,r4
044D ED        1444            mov     a,r5
044E 120100    1445            lcall   ___fssub
0451 858218    1446            mov     _ftoa_fpart_1_61,dpl
0454 858319    1447            mov     (_ftoa_fpart_1_61 + 1),dph
0457 85F01A    1448            mov     (_ftoa_fpart_1_61 + 2),b
045A F51B      1449            mov     (_ftoa_fpart_1_61 + 3),a
045C E581      1450            mov     a,sp
045E 24FC      1451            add     a,#0xfc
0460 F581      1452            mov     sp,a
0462           1453   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:281: int i = intToStr(ipart, res, 0); 
0462 853010    1454            mov     _intToStr_PARM_2,_ftoa_PARM_2
0465 853111    1455            mov     (_intToStr_PARM_2 + 1),(_ftoa_PARM_2 + 1)
0468 853212    1456            mov     (_intToStr_PARM_2 + 2),(_ftoa_PARM_2 + 2)
046B E4        1457            clr     a
046C F5C0      1458            mov     _intToStr_PARM_3,a
046E F5C1      1459            mov     (_intToStr_PARM_3 + 1),a
0470 85C882    1460            mov     dpl,_ftoa_ipart_1_61
0473 85C983    1461            mov     dph,(_ftoa_ipart_1_61 + 1)
0476 120100    1462            lcall   _intToStr
0479 AE82      1463            mov     r6,dpl
047B AF83      1464            mov     r7,dph
047D           1465   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:284: if (afterpoint != 0) { 
047D E5F0      1466            mov     a,_ftoa_PARM_3
047F 45F1      1467            orl     a,(_ftoa_PARM_3 + 1)
0481 7001      1468            jnz     L016006?
0483 22        1469            ret
0484           1470   L016006?:
0484           1471   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:285: res[i] = '.'; // add dot 
0484 EE        1472            mov     a,r6
0485 2530      1473            add     a,_ftoa_PARM_2
0487 FE        1474            mov     r6,a
0488 EF        1475            mov     a,r7
0489 3531      1476            addc    a,(_ftoa_PARM_2 + 1)
048B FF        1477            mov     r7,a
048C A832      1478            mov     r0,(_ftoa_PARM_2 + 2)
048E 8E82      1479            mov     dpl,r6
0490 8F83      1480            mov     dph,r7
0492 88F0      1481            mov     b,r0
0494 742E      1482            mov     a,#0x2E
0496 120100    1483            lcall   __gptrput
0499           1484   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:290: fpart = fpart * power(10, afterpoint); 
0499 85F070    1485            mov     _power_PARM_2,_ftoa_PARM_3
049C 85F171    1486            mov     (_power_PARM_2 + 1),(_ftoa_PARM_3 + 1)
049F 90000A    1487            mov     dptr,#0x000A
04A2 C006      1488            push    ar6
04A4 C007      1489            push    ar7
04A6 C000      1490            push    ar0
04A8 120100    1491            lcall   _power
04AB A982      1492            mov     r1,dpl
04AD AA83      1493            mov     r2,dph
04AF ABF0      1494            mov     r3,b
04B1 FC        1495            mov     r4,a
04B2 C001      1496            push    ar1
04B4 C002      1497            push    ar2
04B6 C003      1498            push    ar3
04B8 C004      1499            push    ar4
04BA 851882    1500            mov     dpl,_ftoa_fpart_1_61
04BD 851983    1501            mov     dph,(_ftoa_fpart_1_61 + 1)
04C0 851AF0    1502            mov     b,(_ftoa_fpart_1_61 + 2)
04C3 E51B      1503            mov     a,(_ftoa_fpart_1_61 + 3)
04C5 120100    1504            lcall   ___fsmul
04C8 858218    1505            mov     _ftoa_fpart_1_61,dpl
04CB 858319    1506            mov     (_ftoa_fpart_1_61 + 1),dph
04CE 85F01A    1507            mov     (_ftoa_fpart_1_61 + 2),b
04D1 F51B      1508            mov     (_ftoa_fpart_1_61 + 3),a
04D3 E581      1509            mov     a,sp
04D5 24FC      1510            add     a,#0xfc
04D7 F581      1511            mov     sp,a
04D9           1512   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:292: intToStr((int)fpart, res + i + 1, afterpoint); 
04D9 851882    1513            mov     dpl,_ftoa_fpart_1_61
04DC 851983    1514            mov     dph,(_ftoa_fpart_1_61 + 1)
04DF 851AF0    1515            mov     b,(_ftoa_fpart_1_61 + 2)
04E2 E51B      1516            mov     a,(_ftoa_fpart_1_61 + 3)
04E4 120100    1517            lcall   ___fs2sint
04E7 D000      1518            pop     ar0
04E9 D007      1519            pop     ar7
04EB D006      1520            pop     ar6
04ED 7401      1521            mov     a,#0x01
04EF 2E        1522            add     a,r6
04F0 F510      1523            mov     _intToStr_PARM_2,a
04F2 E4        1524            clr     a
04F3 3F        1525            addc    a,r7
04F4 F511      1526            mov     (_intToStr_PARM_2 + 1),a
04F6 8812      1527            mov     (_intToStr_PARM_2 + 2),r0
04F8 85F0C0    1528            mov     _intToStr_PARM_3,_ftoa_PARM_3
04FB 85F1C1    1529            mov     (_intToStr_PARM_3 + 1),(_ftoa_PARM_3 + 1)
04FE 020100    1530            ljmp    _intToStr
0501           1531   ;------------------------------------------------------------
0501           1532   ;Allocation info for local variables in function 'main'
0501           1533   ;------------------------------------------------------------
0501           1534   ;F                         Allocated to registers r2 r3 r4 r5 
0501           1535   ;buff                      Allocated with name '_main_buff_1_64'
0501           1536   ;------------------------------------------------------------
0501           1537   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:297: void main (void) 
0501           1538   ;        -----------------------------------------
0501           1539   ;         function main
0501           1540   ;        -----------------------------------------
0501           1541   _main:
0501           1542   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:302: LCD_4BIT();  
0501 120100    1543            lcall   _LCD_4BIT
0504           1544   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:304: LCDprint("LCD 4-bit test:", 1, 1);
0504 75A001    1545            mov     _LCDprint_PARM_2,#0x01
0507 D2B0      1546            setb    _LCDprint_PARM_3
0509 90C7A8    1547            mov     dptr,#__str_0
050C 75F080    1548            mov     b,#0x80
050F 120100    1549            lcall   _LCDprint
0512           1550   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:307: TIMER0_Init();
0512 120100    1551            lcall   _TIMER0_Init
0515           1552   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:309: waitms(500); // Give PuTTY a chance to start.
0515 9001F4    1553            mov     dptr,#0x01F4
0518 120100    1554            lcall   _waitms
051B           1555   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:310: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
051B 74E8      1556            mov     a,#__str_1
051D C0E0      1557            push    acc
051F 74C7      1558            mov     a,#(__str_1 >> 8)
0521 C0E0      1559            push    acc
0523 7480      1560            mov     a,#0x80
0525 C0E0      1561            push    acc
0527 120100    1562            lcall   _printf
052A 1581      1563            dec     sp
052C 1581      1564            dec     sp
052E 1581      1565            dec     sp
0530           1566   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:315: __FILE__, __DATE__, __TIME__);
0530           1567   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:314: "Compiled: %s, %s\n\n",
0530 7468      1568            mov     a,#__str_5
0532 C0E0      1569            push    acc
0534 74C8      1570            mov     a,#(__str_5 >> 8)
0536 C0E0      1571            push    acc
0538 7480      1572            mov     a,#0x80
053A C0E0      1573            push    acc
053C 74A8      1574            mov     a,#__str_4
053E C0E0      1575            push    acc
0540 74C8      1576            mov     a,#(__str_4 >> 8)
0542 C0E0      1577            push    acc
0544 7480      1578            mov     a,#0x80
0546 C0E0      1579            push    acc
0548 74E8      1580            mov     a,#__str_3
054A C0E0      1581            push    acc
054C 74C8      1582            mov     a,#(__str_3 >> 8)
054E C0E0      1583            push    acc
0550 7480      1584            mov     a,#0x80
0552 C0E0      1585            push    acc
0554 7428      1586            mov     a,#__str_2
0556 C0E0      1587            push    acc
0558 74C9      1588            mov     a,#(__str_2 >> 8)
055A C0E0      1589            push    acc
055C 7480      1590            mov     a,#0x80
055E C0E0      1591            push    acc
0560 120100    1592            lcall   _printf
0563 E581      1593            mov     a,sp
0565 24F4      1594            add     a,#0xf4
0567 F581      1595            mov     sp,a
0569           1596   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:317: while(1)
0569           1597   L017002?:
0569           1598   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:319: TL0=0;
0569 758A00    1599            mov     _TL0,#0x00
056C           1600   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:320: TH0=0;
056C 758C00    1601            mov     _TH0,#0x00
056F           1602   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:321: overflow_count=0;
056F 75E000    1603            mov     _overflow_count,#0x00
0572           1604   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:322: TF0=0;
0572 C28D      1605            clr     _TF0
0574           1606   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:323: TR0=1; // Start Timer/Counter 0
0574 D28C      1607            setb    _TR0
0576           1608   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:324: waitms(1000);
0576 9003E8    1609            mov     dptr,#0x03E8
0579 120100    1610            lcall   _waitms
057C           1611   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:325: TR0=0; // Stop Timer/Counter 0
057C C28C      1612            clr     _TR0
057E           1613   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:326: F=overflow_count*0x10000L+TH0*0x100L+TL0;
057E AAE0      1614            mov     r2,_overflow_count
0580 7B00      1615            mov     r3,#0x00
0582 8B05      1616            mov     ar5,r3
0584 8A04      1617            mov     ar4,r2
0586 7B00      1618            mov     r3,#0x00
0588 7A00      1619            mov     r2,#0x00
058A AE8C      1620            mov     r6,_TH0
058C 7F00      1621            mov     r7,#0x00
058E 7800      1622            mov     r0,#0x00
0590 8801      1623            mov     ar1,r0
0592 8F00      1624            mov     ar0,r7
0594 8E07      1625            mov     ar7,r6
0596 E4        1626            clr     a
0597 2A        1627            add     a,r2
0598 FA        1628            mov     r2,a
0599 EF        1629            mov     a,r7
059A 3B        1630            addc    a,r3
059B FB        1631            mov     r3,a
059C E8        1632            mov     a,r0
059D 3C        1633            addc    a,r4
059E FC        1634            mov     r4,a
059F E9        1635            mov     a,r1
05A0 3D        1636            addc    a,r5
05A1 FD        1637            mov     r5,a
05A2 AE8A      1638            mov     r6,_TL0
05A4 E4        1639            clr     a
05A5 FF        1640            mov     r7,a
05A6 33        1641            rlc     a
05A7 95E0      1642            subb    a,acc
05A9 F8        1643            mov     r0,a
05AA F9        1644            mov     r1,a
05AB EE        1645            mov     a,r6
05AC 2A        1646            add     a,r2
05AD FA        1647            mov     r2,a
05AE EF        1648            mov     a,r7
05AF 3B        1649            addc    a,r3
05B0 FB        1650            mov     r3,a
05B1 E8        1651            mov     a,r0
05B2 3C        1652            addc    a,r4
05B3 FC        1653            mov     r4,a
05B4 E9        1654            mov     a,r1
05B5 3D        1655            addc    a,r5
05B6           1656   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:327: ftoa(F, buff, 4); 
05B6 FD        1657            mov     r5,a
05B7 8A82      1658            mov     dpl,r2
05B9 8B83      1659            mov     dph,r3
05BB 8CF0      1660            mov     b,r4
05BD C002      1661            push    ar2
05BF C003      1662            push    ar3
05C1 C004      1663            push    ar4
05C3 C005      1664            push    ar5
05C5 120100    1665            lcall   ___ulong2fs
05C8 AE82      1666            mov     r6,dpl
05CA AF83      1667            mov     r7,dph
05CC A8F0      1668            mov     r0,b
05CE F9        1669            mov     r1,a
05CF 753058    1670            mov     _ftoa_PARM_2,#_main_buff_1_64
05D2 753100    1671            mov     (_ftoa_PARM_2 + 1),#0x00
05D5 753240    1672            mov     (_ftoa_PARM_2 + 2),#0x40
05D8 75F004    1673            mov     _ftoa_PARM_3,#0x04
05DB E4        1674            clr     a
05DC F5F1      1675            mov     (_ftoa_PARM_3 + 1),a
05DE 8E82      1676            mov     dpl,r6
05E0 8F83      1677            mov     dph,r7
05E2 88F0      1678            mov     b,r0
05E4 E9        1679            mov     a,r1
05E5 120100    1680            lcall   _ftoa
05E8           1681   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:328: LCDprint(buff, 2, 1);
05E8 75A002    1682            mov     _LCDprint_PARM_2,#0x02
05EB D2B0      1683            setb    _LCDprint_PARM_3
05ED 90B858    1684            mov     dptr,#_main_buff_1_64
05F0 75F040    1685            mov     b,#0x40
05F3 120100    1686            lcall   _LCDprint
05F6           1687   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:330: printf("\rf=%luHz", F);
05F6 74E8      1688            mov     a,#__str_6
05F8 C0E0      1689            push    acc
05FA 74C9      1690            mov     a,#(__str_6 >> 8)
05FC C0E0      1691            push    acc
05FE 7480      1692            mov     a,#0x80
0600 C0E0      1693            push    acc
0602 120100    1694            lcall   _printf
0605 E581      1695            mov     a,sp
0607 24F9      1696            add     a,#0xf9
0609 F581      1697            mov     sp,a
060B           1698   ;        C:\Users\jinil\Desktop\ELEC\ELEC 291\LAB4\freqonlcd.c:331: printf("\x1b[0K"); // ANSI: Clear from cursor to end of line.
060B 7428      1699            mov     a,#__str_7
060D C0E0      1700            push    acc
060F 74CA      1701            mov     a,#(__str_7 >> 8)
0611 C0E0      1702            push    acc
0613 7480      1703            mov     a,#0x80
0615 C0E0      1704            push    acc
0617 120100    1705            lcall   _printf
061A 1581      1706            dec     sp
061C 1581      1707            dec     sp
061E 1581      1708            dec     sp
0620 020100    1709            ljmp    L017002?
0623           1710            rseg R_CSEG
0623           1711   
0000           1712            rseg R_XINIT
0000           1713   
0000           1714            rseg R_CONST
0000           1715   __str_0:
0000 4C434420  1716            db 'LCD 4-bit test:'
     342D6269
     74207465
     73743A
000F 00        1717            db 0x00
0010           1718   __str_1:
0010 1B        1719            db 0x1B
0011 5B324A    1720            db '[2J'
0014 00        1721            db 0x00
0015           1722   __str_2:
0015 45464D38  1723            db 'EFM8 Frequency measurement using Timer/Counter 0.'
     20467265
     7175656E
     6379206D
     65617375
     72656D65
     6E742075
     73696E67
     2054696D
     65722F43
     6F756E74
     65722030
     2E
0046 0A        1724            db 0x0A
0047 46696C65  1725            db 'File: %s'
     3A202573
004F 0A        1726            db 0x0A
0050 43        1727            db 'C'
0051 6F6D7069  1728            db 'ompiled: %s, %s'
     6C65643A
     2025732C
     202573
0060 0A        1729            db 0x0A
0061 0A        1730            db 0x0A
0062 00        1731            db 0x00
0063           1732   __str_3:
0063 433A      1733            db 'C:'
0065 5C        1734            db 0x5C
0066 55736572  1735            db 'Users'
     73
006B 5C        1736            db 0x5C
006C 6A696E69  1737            db 'jinil'
     6C
0071 5C        1738            db 0x5C
0072 4465736B  1739            db 'Desktop'
     746F70
0079 5C        1740            db 0x5C
007A 454C4543  1741            db 'ELEC'
007E 5C        1742            db 0x5C
007F 454C4543  1743            db 'ELEC 291'
     20323931
0087 5C        1744            db 0x5C
0088 4C414234  1745            db 'LAB4'
008C 5C        1746            db 0x5C
008D 66726571  1747            db 'freqonlcd.c'
     6F6E6C63
     642E63
0098 00        1748            db 0x00
0099           1749   __str_4:
0099 4D617220  1750            db 'Mar  4 2020'
     20342032
     303230
00A4 00        1751            db 0x00
00A5           1752   __str_5:
00A5 31323A31  1753            db '12:11:41'
     313A3431
00AD 00        1754            db 0x00
00AE           1755   __str_6:
00AE 0D        1756            db 0x0D
00AF 663D256C  1757            db 'f=%luHz'
     75487A
00B6 00        1758            db 0x00
00B7           1759   __str_7:
00B7 1B        1760            db 0x1B
00B8 5B304B    1761            db '[0K'
00BB 00        1762            db 0x00
00BC           1763   
0003           1764            CSEG
0003           1765   
0003           1766   end
